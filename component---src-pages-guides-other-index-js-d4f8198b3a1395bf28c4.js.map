{"version":3,"sources":["webpack:///./src/pages/guides/other/index.js","webpack:///./src/components/post-list.js","webpack:///./src/components/post-list.module.css"],"names":["AllOtherGuides","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","name","pageQuery","PostIndex","Fragment","id","styles","listName","map","node","frontmatter","fields","slug","key","className","nowrap","postTitle","postLink","to","date","edited","author","midDotDivider","dangerouslySetInnerHTML","__html","description","excerpt","module","exports"],"mappings":"6FACA,kGAeeA,UAXQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAWO,KAAK,mBAAmBH,MAAOA,MAOzC,IAAMI,EAAS,c,kCClBtB,0DAoDeC,IAvCG,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MACzB,OACE,kBAAC,IAAMM,SAAP,KACE,wBAAIC,GAAIC,IAAOC,UAAWN,GACzBH,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,4BAAQE,UAAWR,IAAOS,QACxB,wBAAID,UAAWR,IAAOU,WACpB,kBAAC,OAAD,CAAMF,UAAWR,IAAOW,SAAUC,GAAIT,EAAKE,OAAOC,MAC/Cf,IAGL,+BACGY,EAAKC,YAAYS,KACjBV,EAAKC,YAAYU,QAAjB,KAEFX,EAAKC,YAAYW,QAChB,kBAAC,IAAMjB,SAAP,KACE,0BAAMU,UAAWR,IAAOgB,gBACxB,+BAAQb,EAAKC,YAAYW,UAI/B,iCACE,uBACEE,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,mB,qBCxC/DC,EAAOC,QAAU,CAAC,SAAW,oCAAoC,UAAY,qCAAqC,cAAgB,yCAAyC,SAAW","file":"component---src-pages-guides-other-index-js-d4f8198b3a1395bf28c4.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../../../components/layout\"\nimport PostIndex from \"../../../components/post-list\"\n\nconst AllOtherGuides = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <PostIndex name=\"All Other Guides\" posts={posts} />\n    </Layout>\n  )\n}\n\nexport default AllOtherGuides\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"posts/guides/other/\" } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            edited(formatString: \"MMMM DD, YYYY\")\n            author\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styles from \"./post-list.module.css\"\n\n/**\n * Displays a list of all of the posts passed in the props.posts object\n * Perhaps not a good way to do things since it expects certain data within props.posts\n * But Gatsby does not allow variables inside non-page static graphql queries\n *\n * @param {*} props\n * @param props.name The heading to show above the list of posts\n * @param props.posts The \"posts\"\n */\nconst PostIndex = ({ name, posts }) => {\n  return (\n    <React.Fragment>\n      <h1 id={styles.listName}>{name}</h1>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header className={styles.nowrap}>\n              <h3 className={styles.postTitle}>\n                <Link className={styles.postLink} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {node.frontmatter.edited && `*`}\n              </small>\n              {node.frontmatter.author && (\n                <React.Fragment>\n                  <span className={styles.midDotDivider}></span>\n                  <small>{node.frontmatter.author}</small>\n                </React.Fragment>\n              )}\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default PostIndex\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listName\":\"post-list-module--listName--ZUrBw\",\"postTitle\":\"post-list-module--postTitle--24J2e\",\"midDotDivider\":\"post-list-module--midDotDivider--30S8_\",\"postLink\":\"post-list-module--postLink--2ZZYk\"};"],"sourceRoot":""}